# I RAN THIS USING MY PERSONAL JUPYTER NOTEBOOK. I CAN'T FIGURE OUT HOW TO ADD THAT CODE INTO THE REPOSITORY. I DECIDED TO CREATE AN 
# EXTRA FILE AND WRITE THE CODE HERE. PERHAPS YOU CAN TRY IT ON YOUR NOTEBOOK. IT IS A TUTORIAL FROM LAST WEEK'S VIDEO I SAW. I DID 
# THE STEP BY STEP BUT I KEEP GETTING STUCK ON STEP 3.1

# STEP 1.1

!git clone https://github.com/sorki/python-mnist
!./python-mnist/get_data.sh
!pip3 install emnist
from emnist import extract_training_samples

print("Imported the EMNIST libraries we need!")

# STEP 1.2

# Grab the data from the OpenML website
# X will be the images and y will be the labels
X, y = extract_training_samples('letters')

# Make sure that every pixel in all of the images is a value between 0 and 1
X = X / 255.

# Use the first 60000 instances as training and the next 10000 as testing
X_train, X_test = X[:60000], X[60000:70000]
y_train, y_test = y[:60000], y[60000:70000]

# There is one other thing we need to do, we need to
# record the number of samples in each dataset and the number of pixels in each image
X_train = X_train.reshape(60000,784)
x_test = X_test.reshape(10000,784)

print("Extracted our samples and divided our training and testing data sets")

# STEP 1.3

import matplotlib.pyplot as plt

img_index = 14000 # <<<<<< this value can be updated
img = X_train[img_index]
print ("Image Label: " + str(chr(y_train[img_index]+96)))
plt.imshow(img.reshape((28,28)))

# STEP 2.1

# These two lines import the ML libraries we need
from sklearn.datasets import fetch_openml
from sklearn.neural_network import MLPClassifier

# This creates our first MLP with 1 hidden layer with 50 neurons and sets it to run
mlp1 = MLPClassifier(hidden_layer_sizes=(50,), max_iter=20, alpha=1e-4,
                    solver='sgd', verbose=10, tol=1e-4, random_state=1,
                    learning_rate_init=.1)

print("Created our first MLP Network")

# STEP 3.1

mlp1.fit(X_train, y_train)
print("Training set score: %f" % mlp1.score(X_train, y_train))
print("Test set score: %f" % mlp1.score(X_test, y_test))

# THIS IS WHERE I AM GETTING  AN ERROR. 
# ValueError: Found array with dim 3. Estimator expected <= 2.

